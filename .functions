#!/usr/bin/env bash


# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_";
}

# free up some space from images and brew
function cleanup() {
    brew cleanup && docker system prune -f
}

server() {
	local port="${1:-6060}"
	sleep 1 && open "http://localhost:${port}/" &
	# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
	# And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)
	python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# run dig and display the most relevant info
digga() {
    dig +nocmd "$1" any +multiline +noall +answerß
}

# 'v' with no args opens the current dir in Vim otherwise opens the given location
v() {
    if [ $# -eq 0 ]; then
        vim .
    else
        vim "$@"
    fi
}
mkd(){
    mkdir -p "$@" && cd "$@";
}

pubkey(){
    # pipe keys to my clipboard
    local key = $1
    if [ $key != " " ]; then
        more ~/.ssh/id_rsa.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
    elif [ $@ == "aws" ]; then
        more ~/.ssh/aws_prod.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
    elif [ $@ == "bitbucket" ]; then
        more ~/.ssh/bitbucket.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'
}

prikey(){
    # pipe keys to my clipboard
    local key = $1
    if [ $key != " " ]; then
        more ~/.ssh/id_rsa | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
    elif [ $@ == "aws" ]; then
        more ~/.ssh/aws_prod | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
    elif [ $@ == "bitbucket" ]; then
        more ~/.ssh/bitbucket | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'
}

# TODO Template functions:
# NGINX
# docker-compose
# CircleCI + TravisCI
